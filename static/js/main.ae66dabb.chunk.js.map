{"version":3,"sources":["Journal.js","Category.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","apps","length","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","categories","auth","id","name","Journal","useState","category","setCategory","useForm","register","handleSubmit","showForm","setShowForm","records","setRecords","total","setTotal","editMode","setEditMode","createdAt","Date","description","amount","tempData","setTempData","moneyRef","collection","query","orderBy","limitToLast","useCollectionData","idField","data","console","log","useEffect","t","r","map","d","i","JournalRow","onDeleteClick","handleDeleteClick","onEditClick","handleEditClick","handleCloseForm","onSubmit","a","preparedData","parseFloat","doc","set","then","catch","error","alert","add","window","confirm","delete","toDate","Container","Row","Col","Button","variant","onClick","options","getOptionLabel","x","getOptionValue","onChange","obj","filter","Table","striped","bordered","hover","colSpan","Modal","show","onHide","aria-labelledby","centered","type","placeholder","ref","required","defaultValue","Header","closeButton","Title","Body","htmlFor","format","value","c","step","min","Footer","props","money2Ref","Home","App","Navbar","collapseOnSelect","expand","bg","Brand","href","Toggle","aria-controls","Collapse","Nav","className","Link","NavDropdown","title","Item","Divider","eventKey","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ae66dabb.chunk.js","sourcesContent":["import { useState, useEffect } from 'react'\nimport { Button, Modal } from 'react-bootstrap'\nimport Container from 'react-bootstrap/Container'\nimport Table from 'react-bootstrap/Table'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Select from 'react-select'\nimport { format } from 'date-fns'\nimport { BsPlus, BsTrash, BsPencil } from \"react-icons/bs\";\nimport { useForm } from \"react-hook-form\"\n\n// Firebase\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\nimport firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/auth'\nimport setISODay from 'date-fns/setISODay'\n\nif (firebase.apps.length === 0) {\n  firebase.initializeApp({\n  apiKey: process.env.REACT_APP_API_KEY,\nauthDomain: process.env.REACT_APP_AUTH_DOMAIN,\nprojectId: process.env.REACT_APP_PROJECT_ID,\nstorageBucket: process.env.REACT_APP_STORAGE_BUCKET,\nmessagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\nappId: process.env.REACT_APP_APP_ID,\nmeasurementId: process.env.REACT_APP_MEASUREMENT_ID\n  })\n}\nconst firestore = firebase.firestore()\nconst auth = firebase.auth()\n\n\n// const data = require('./sampleData.json')\n\nconst categories = [\n  { id: 0, name: '-- All --' },\n  { id: 1, name: 'Food' },\n  { id: 2, name: 'Fun' },\n  { id: 3, name: 'Transportation' },\n  { id: 4, name: 'Uncategorized' },\n  { id: 5, name: 'Books' },\n]\n\nexport default function Journal() {\n  const [category, setCategory] = useState()\n  const { register, handleSubmit } = useForm()\n  const [showForm, setShowForm] = useState(false)\n  const [records, setRecords] = useState([])\n  const [total, setTotal] = useState(0)\n  const [editMode, setEditMode] = useState(false)\n  const [tempData, setTempData] = useState({\n    id: null,\n    createdAt: new Date(),\n    description: '',\n    amount: null,\n    category: null\n  })\n\n  // Firebase stuff\n  const moneyRef = firestore.collection('money');\n  const query = moneyRef.orderBy('createdAt', 'asc').limitToLast(100);\n  const [data] = useCollectionData(query, { idField: 'id' });\n\n\n  console.log(\"REACT_APP_PROJECT_ID\", process.env.REACT_APP_PROJECT_ID)\n\n  // This will be run when 'data' is changed.\n  useEffect(() => {\n    if (data) { // Guard condition\n      let t = 0\n      let r = data.map((d, i) => {\n        // console.log('useEffect', format(d.createdAt.toDate(), \"yyyy-MM-dd\"))\n        t += d.amount\n        return (\n          <JournalRow\n            data={d}\n            i={i}\n            onDeleteClick={handleDeleteClick}\n            onEditClick={handleEditClick}\n          />\n        )\n      })\n\n      setRecords(r)\n      setTotal(t)\n    }\n  },\n    [data])\n\n\n  const handleCategoryFilterChange = (obj) => {\n    console.log('filter', obj)\n    if (data) { // Guard condition      \n      let t = 0\n      let filteredData = data.filter(d => obj.id == 0 || d.category.id == obj.id)\n      let r = filteredData.map((d, i) => {\n        console.log('filter', d)\n        t += d.amount\n        return (\n          <JournalRow data={d} i={i} />\n        )\n      })\n\n      setRecords(r)\n      setTotal(t)\n    }\n  }\n\n\n  // Handlers for Modal Add Form\n  const handleshowForm = () => setShowForm(true)\n\n  // Handlers for Modal Add Form\n  const handleCloseForm = () => {\n    setTempData({\n      id: null,\n      createdAt: new Date(),\n      description: '',\n      amount: 0,\n      category: categories[0]\n    })\n    setCategory({})\n    setShowForm(false)\n    setEditMode(false)\n  }\n\n  // Handle Add Form submit\n  const onSubmit = async (data) => {\n    let preparedData = {\n      // ...data,\n      description: data.description,\n      amount: parseFloat(data.amount),\n      createdAt: new Date(data.createdAt),\n      category: category\n    }\n    console.log('onSubmit', preparedData)\n\n\n    if (editMode) {\n      // Update record\n      console.log(\"UPDATING!!!!\", data.id)\n      await moneyRef.doc(data.id)\n        .set(preparedData)\n        .then(() => console.log(\"moneyRef has been set\"))\n        .catch((error) => {\n          console.error(\"Error: \", error);\n          alert(error)\n        });\n    } else {\n      // Add to firebase\n      // This is asynchronous operation, \n      // JS will continue process later, so we can set \"callback\" function\n      // so the callback functions will be called when firebase finishes.\n      // Usually, the function is called \"then / error / catch\".\n      await moneyRef\n        .add(preparedData)\n        .then(() => console.log(\"New record has been added.\"))\n        .catch((error) => {\n          console.error(\"Errror:\", error)\n          alert(error)\n        })\n      // setShowForm(false)\n    }\n    handleCloseForm()\n  }\n\n  const handleCategoryChange = (obj) => {\n    console.log('handleCategoryChange', obj)\n    setCategory(obj)\n  }\n\n  const handleDeleteClick = (id) => {\n    console.log('handleDeleteClick in Journal', id)\n    if (window.confirm(\"Are you sure to delete this record?\"))\n      moneyRef.doc(id).delete()\n  }\n\n  const handleEditClick = (data) => {\n    let preparedData = {\n      id: data.id,\n      description: data.description,\n      amount: parseFloat(data.amount),\n      createdAt: data.createdAt.toDate(),\n      category: category\n    }\n    console.log(\"handleEditClick\", preparedData)\n    // expect original data type for data.createdAt is Firebase's timestamp\n    // convert to JS Date object and put it to the same field\n    // if ('toDate' in data.createdAt) // guard, check wther toDate() is available in createdAt object.\n    //   data.createdAt = data.createdAt.toDate()\n\n    setTempData(preparedData)\n    setCategory(data.category)\n    setShowForm(true)\n    setEditMode(true)\n  }\n\n\n  return (\n    <Container>\n      <Row>\n        <Col>\n          <h1>Journal</h1>\n          <Button variant=\"outline-dark\" onClick={handleshowForm}>\n            <BsPlus /> Add\n      </Button>\n        </Col>\n        <Col>\n          Category:\n          <Select\n            options={categories}\n            getOptionLabel={x => x.name}\n            getOptionValue={x => x.id}\n            onChange={handleCategoryFilterChange}\n          />\n        </Col>\n\n      </Row>\n\n      <Table striped bordered hover variant=\"dark\">\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>Date</th>\n            <th>Description</th>\n            <th>Category</th>\n            <th>Amount</th>\n            <th>Edit</th>\n            <th>Delete</th>\n          </tr>\n        </thead>\n        <tbody>\n          {records}\n        </tbody>\n        <tfooter>\n          <td colSpan={5}>\n            <h2>Total: {total}</h2>\n          </td>\n        </tfooter>\n      </Table>\n\n\n      <Modal\n        show={showForm} onHide={handleCloseForm}\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <input\n            type=\"hidden\"\n            placeholder=\"ID\"\n            ref={register({ required: false })}\n            name=\"id\"\n            id=\"id\"\n            defaultValue={tempData.id}\n          />\n          <Modal.Header closeButton>\n            <Modal.Title>\n              {editMode ? \"Edit Record\" : \"Add New Record\"}\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Row>\n              <Col>\n                <label htmlFor=\"createdAt\">Date</label>\n              </Col>\n              <Col>\n                <input\n                  type=\"date\"\n                  placeholder=\"Date\"\n                  ref={register({ required: true })}\n                  name=\"createdAt\"\n                  id=\"createdAt\"\n                  defaultValue={format(tempData.createdAt, \"yyyy-MM-dd\")}\n                />\n\n              </Col>\n            </Row>\n\n            <Row>\n              <Col>\n                <label htmlFor=\"category\">Category</label>\n              </Col>\n              <Col>\n                <Select\n                  id=\"category\"\n                  name=\"category\"\n                  value={category}\n                  placeholder=\"Category\"\n                  options={categories.filter(c => c.id != 0)}\n                  onChange={handleCategoryChange}\n                  getOptionLabel={x => x.name}\n                  getOptionValue={x => x.id}\n                />\n              </Col>\n            </Row>\n\n            <Row>\n              <Col>\n                <label htmlFor=\"description\">Description</label>\n              </Col>\n              <Col>\n                <input\n                  type=\"text\"\n                  placeholder=\"Description\"\n                  ref={register({ required: true })}\n                  name=\"description\"\n                  id=\"description\"\n                  defaultValue={tempData.description}\n                />\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n                <label htmlFor=\"amount\">Amount</label>\n              </Col>\n              <Col>\n                <input\n                  type=\"number\"\n                  step=\"any\"\n                  min=\"0\"\n                  placeholder=\"Amount\"\n                  ref={register({ required: true })}\n                  name=\"amount\"\n                  id=\"amount\"\n                  defaultValue={tempData.amount}\n                />\n              </Col>\n            </Row>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={handleCloseForm}>\n              Close\n          </Button>\n            <Button variant={editMode ? \"success\" : \"primary\"} type=\"submit\">\n              {editMode ? \"Save Record\" : \"Add Record\"}\n            </Button>\n          </Modal.Footer>\n        </form>\n      </Modal>\n    </Container>\n  )\n}\n\nfunction JournalRow(props) {\n  let d = props.data\n  let i = props.i\n  // console.log(\"JournalRow\", d)\n  return (\n    <tr>\n      <td></td>\n      <td>{format(d.createdAt.toDate(), \"yyyy-MM-dd\")}</td>\n      <td>{d.description}</td>\n      <td>{d.category.name}</td>\n      <td>{d.amount}</td>\n      <td><BsPencil onClick={() => props.onEditClick(d)} /></td>\n      <td><BsTrash onClick={() => props.onDeleteClick(d.id)} /></td>\n\n    </tr>\n  )\n}","import { useState, useEffect } from 'react'\nimport { Button, Modal } from 'react-bootstrap'\nimport Container from 'react-bootstrap/Container'\nimport Table from 'react-bootstrap/Table'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Select from 'react-select'\nimport { format, setISODay } from 'date-fns'\nimport { BsPlus, BsTrash, BsPencil } from \"react-icons/bs\";\nimport { useForm } from \"react-hook-form\"\n\n// Firebase\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\nimport firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/auth'\n\nif (firebase.apps.length === 0) {\n  firebase.initializeApp({\n  apiKey: process.env.REACT_APP_API_KEY,\nauthDomain: process.env.REACT_APP_AUTH_DOMAIN,\nprojectId: process.env.REACT_APP_PROJECT_ID,\nstorageBucket: process.env.REACT_APP_STORAGE_BUCKET,\nmessagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\nappId: process.env.REACT_APP_APP_ID,\nmeasurementId: process.env.REACT_APP_MEASUREMENT_ID\n  })\n}\nconst firestore = firebase.firestore()\nconst auth = firebase.auth()\n\n\n// const data = require('./sampleData.json')\n\nconst categories = [\n  { id: -1, name: 'Uncategorized' },\n  { id: 0, name: '-- All --' },\n  { id: 1, name: 'Food' },\n  { id: 2, name: 'Fun' },\n  { id: 3, name: 'Transportation' },\n  { id: 4, name: 'Books' },\n  { id: 5, name: 'Home' },\n]\n\nexport default function Journal() {\n  const [category, setCategory] = useState()\n  const { register, handleSubmit } = useForm()\n  const [showForm, setShowForm] = useState(false)\n  const [records, setRecords] = useState([])\n  const [total, setTotal] = useState(0)\n  const [editMode, setEditMode] = useState(false)\n  const [tempData, setTempData] = useState({\n    id: null,\n    createdAt: new Date(),\n    description: '',\n    amount: null,\n    category: null\n  })\n\n  // Firebase stuff\n  const money2Ref = firestore.collection('money2');\n  const query = money2Ref.orderBy('id', 'asc').limitToLast(100);\n  const [data] = useCollectionData(query, { idField: 'id' });\n\n\n  console.log(\"REACT_APP_PROJECT_ID\", process.env.REACT_APP_PROJECT_ID)\n\n  // This will be run when 'data' is changed.\n  useEffect(() => {\n    if (data) { // Guard condition\n      let r = data.map((d, i) => {\n        // console.log('useEffect', format(d.createdAt.toDate(), \"yyyy-MM-dd\"))\n        return (\n          <JournalRow\n            data={d}\n            i={i}\n            onDeleteClick={handleDeleteClick}\n            onEditClick={handleEditClick}\n          />\n        )\n      })\n\n      setRecords(r)\n\n    }\n  },\n    [data])\n\n\n  const handleCategoryFilterChange = (obj) => {\n    console.log('filter', obj)\n    if (data) { // Guard condition      \n      let filteredData = data.filter(d => obj.id == 0 || d.category.id == obj.id)\n      let r = filteredData.map((d, i) => {\n        console.log('filter', d)\n        \n        return (\n          <JournalRow data={d} i={i} />\n        )\n      })\n      \n    \n    }\n  }\n\n\n  // Handlers for Modal Add Form\n  const handleshowForm = () => setShowForm(true)\n\n  // Handlers for Modal Add Form\n  const handleCloseForm = () => {\n    setTempData({\n      id: null,\n      category: ''\n    })\n    setCategory({})\n    setShowForm(false)\n    setEditMode(false)\n  }\n\n  // Handle Add Form submit\n  const onSubmit = async (data) => {\n    let preparedData = {\n      // ...data,\n      id: parseFloat(data.id),\n      category: data.category\n    }\n    console.log('onSubmit', preparedData)\n\n\n\n\n    if (editMode) {\n      // Update record\n      console.log(\"UPDATING!!!!\", data.id)\n      await money2Ref.doc(data.id)\n        .set(preparedData)\n        .then(() => console.log(\"money2Ref has been set\"))\n        .catch((error) => {\n          console.error(\"Error: \", error);\n          alert(error)\n        });\n    } else {\n      // Add to firebase\n      // This is asynchronous operation, \n      // JS will continue process later, so we can set \"callback\" function\n      // so the callback functions will be called when firebase finishes.\n      // Usually, the function is called \"then / error / catch\".\n      await money2Ref\n        .add(preparedData)\n        .then(() => console.log(\"New category has been added.\"))\n        .catch((error) => {\n          console.error(\"Error:\", error)\n          alert(error)\n        })\n      // setShowForm(false)\n    }\n    handleCloseForm()\n  }\n\n  const handleCategoryChange = (obj) => {\n    console.log('handleCategoryChange', obj)\n    setCategory(obj)\n  }\n\n\n  const handleDeleteClick = (id) => {\n    console.log('handleDeleteClick in Journal', id)\n    if (window.confirm(\"Are you sure to delete this category?\"))\n      money2Ref.doc(id).delete()\n  }\n\n  const handleEditClick = (data) => {\n    let preparedData = {\n      id: parseFloat(data.id),\n      category: data.category\n    }\n    console.log(\"handleEditClick\", preparedData)\n    // expect original data type for data.createdAt is Firebase's timestamp\n    // convert to JS Date object and put it to the same field\n    // if ('toDate' in data.createdAt) // guard, check wther toDate() is available in createdAt object.\n    //   data.createdAt = data.createdAt.toDate()\n\n    setTempData(preparedData)\n    setCategory(data.category)\n    setShowForm(true)\n    setEditMode(true)\n  }\n\n\n  return (\n    <Container>\n      <Row>\n        <Col>\n          <h1>Category Management</h1>\n          <Button variant=\"outline-dark\" onClick={handleshowForm}>\n            <BsPlus /> Add\n      </Button>\n        </Col>\n        \n\n      </Row>\n    \n\n      <Table striped bordered hover variant=\"dark\">\n        <thead>\n          <tr>\n            \n            <th>Id</th>\n            <th>Categories</th>\n            <th>Delete</th>\n            <th>Edit</th>\n          </tr>\n        </thead>\n        <tbody>\n          {records}\n        </tbody>\n      </Table>\n\n\n      <Modal\n        show={showForm} onHide={handleCloseForm}\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <input\n            type=\"hidden\"\n            placeholder=\"ID\"\n            ref={register({ required: false})}\n            name=\"id\"\n            id=\"id\"\n            defaultValue={tempData.id}\n          />\n          <Modal.Header closeButton>\n            <Modal.Title>\n              {editMode ? \"Update Category\" : \"Add New Category\"}\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Row>\n              <Col>\n                <label htmlFor=\"category\">Category</label>\n              </Col>\n              <Col>\n                <input\n                type=\"category\"\n                placeholder=\"Category\"\n                \n                ref={register({ required: true })}\n                options={categories.filter(c => c.id != 0)}\n                onChange={handleCategoryChange}\n                name=\"category\"\n                id=\"category\"\n                getOptionLabel={x => x.name}\n                getOptionValue={x => x.id}\n                />\n              </Col>\n            </Row>\n\n            \n            \n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={handleCloseForm}>\n              Close\n          </Button>\n            <Button variant={editMode ? \"primary\" : \"primary\"} type=\"submit\">\n              {editMode ? \"Save Record\" : \"Add Record\"}\n            </Button>\n          </Modal.Footer>\n        </form>\n      </Modal>\n    </Container>\n  )\n}\n\nfunction JournalRow(props) {\n  let d = props.data\n  let i = props.i\n  // console.log(\"JournalRow\", d)\n  return (\n    <tr>\n        <td></td>\n      \n      <td>{d.category}</td>\n      <td><BsTrash onClick={() => props.onDeleteClick(d.id)} /></td>\n      <td><BsPencil onClick={() => props.onEditClick(d)} /></td>\n\n    </tr>\n  )\n}","import 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container,\n   Navbar, Nav, NavDropdown,\n } from 'react-bootstrap';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nimport Journal from './Journal'\nimport CategoryManagement from './Category'\n\n\n\nfunction App() {\n  return (\n    <Router>\n      <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n        <Navbar.Brand href=\"/\">Money Journey</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <Nav.Link href=\"/journal\">Journal</Nav.Link>\n            <Nav.Link href=\"/category\">Category</Nav.Link>\n            <NavDropdown title=\"Dropdown\" id=\"collasible-nav-dropdown\">\n              <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n              <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\n              <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n              <NavDropdown.Divider />\n              <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\n            </NavDropdown>\n          </Nav>\n          <Nav>\n            <Nav.Link href=\"#deets\">More deets</Nav.Link>\n            <Nav.Link eventKey={2} href=\"#memes\">\n              Sign Out\n      </Nav.Link>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n\n      <Switch>\n        <Route path=\"/journal\">\n          <Journal />\n        </Route>\n        <Route path=\"/category\">\n          <CategoryManagement />\n        </Route>\n        <Route path=\"/\">\n          <Home />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\n\n\n\n\nfunction Home() {\n  return (\n    <h1>Home</h1>\n  )\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}